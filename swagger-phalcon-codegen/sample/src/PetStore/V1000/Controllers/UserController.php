<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
namespace PetStore\V1000\Controllers;

use PetStore\V1000\Models\User;
        
/**
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 * @RoutePrefix("/v2")
 */
class UserController extends BaseController {
    /**
     * Create user
     *
     * @POST("/user")
     */
    public function createUser() {
        $body = $this->objectConverter->convert($_POST, User::CLASS);
        $this->userService->createUser($body);
    }

    /**
     * Creates list of users with given input array
     *
     * @POST("/user/createWithArray")
     */
    public function createUsersWithArrayInput() {
        $body = $this->objectConverter->convertArray($_POST, User::CLASS);
        $this->userService->createUsersWithArrayInput($body);
    }

    /**
     * Creates list of users with given input array
     *
     * @POST("/user/createWithList")
     */
    public function createUsersWithListInput() {
        $body = $this->objectConverter->convertArray($_POST, User::CLASS);
        $this->userService->createUsersWithListInput($body);
    }

    /**
     * Logs user into the system
     *
     * @GET("/user/login")
     */
    public function loginUser() {
        $username = $this->request->get("username");
        $password = $this->request->get("password");
        $this->userService->loginUser($username, $password);
    }

    /**
     * Logs out current logged in user session
     *
     * @GET("/user/logout")
     */
    public function logoutUser() {
        $this->userService->logoutUser();
    }

    /**
     * Get user by user name
     *
     * @GET("/user/{username}")
     */
    public function getUserByName($username) {
        $this->validator->validate([
            [
                'name' => 'username',
                'value' => $username,
                'required' => true
            ]
        ]);
        $this->userService->getUserByName($username);
    }

    /**
     * Updated user
     *
     * @PUT("/user/{username}")
     */
    public function updateUser($username) {
        $body = $this->objectConverter->convert($_POST, User::CLASS);
        $this->validator->validate([
            [
                'name' => 'username',
                'value' => $username,
                'required' => true
            ]
        ]);
        $this->userService->updateUser($username, $body);
    }

    /**
     * Delete user
     *
     * @DELETE("/user/{username}")
     */
    public function deleteUser($username) {
        $this->validator->validate([
            [
                'name' => 'username',
                'value' => $username,
                'required' => true
            ]
        ]);
        $this->userService->deleteUser($username);
    }
}
