{
  "classname" : "PetController",
  "modelPackage" : "PetStore\\V1000\\Models",
  "package" : "PetStore\\V1000\\Controllers",
  "artifactId" : "swagger-client",
  "imports" : [ {
    "import" : "PetStore\\V1000\\Models\\Pet"
  } ],
  "classVarName" : "pet",
  "namespace" : "PetStore",
  "version" : "1.0.0",
  "appName" : "Swagger Petstore",
  "basePath" : "http://petstore.swagger.io/v2",
  "groupId" : "io.swagger",
  "infoEmail" : "apiteam@swagger.io",
  "importPath" : "PetStore\\V1000\\Controllers.Pet",
  "appVersion" : "1.0.0",
  "artifactVersion" : "1.0.0",
  "licenseInfo" : "Apache 2.0",
  "baseName" : "Pet",
  "contextPath" : "/v2",
  "invokerPackage" : "PetStore\\V1000",
  "operations" : {
    "operation" : [ {
      "responseHeaders" : [ ],
      "hasConsumes" : true,
      "hasProduces" : true,
      "hasParams" : true,
      "hasMore" : true,
      "path" : "/pet",
      "operationId" : "updatePet",
      "httpMethod" : "PUT",
      "summary" : "Update an existing pet",
      "notes" : "",
      "baseName" : "Pet",
      "consumes" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "bodyParam" : {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Pet",
        "description" : "Pet object that needs to be added to the store",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Pet object that needs to be added to the store\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Pet\"\n  }\n}"
      },
      "allParams" : [ {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Pet",
        "description" : "Pet object that needs to be added to the store",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Pet object that needs to be added to the store\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Pet\"\n  }\n}"
      } ],
      "bodyParams" : [ {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Pet",
        "description" : "Pet object that needs to be added to the store",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Pet object that needs to be added to the store\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Pet\"\n  }\n}"
      } ],
      "pathParams" : [ ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "authMethods" : [ {
        "name" : "petstore_auth",
        "type" : "oauth2",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : true,
        "isApiKey" : false,
        "isKeyInQuery" : false,
        "isKeyInHeader" : false
      } ],
      "tags" : [ "Pet" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "405",
        "message" : "Validation exception",
        "hasMore" : true,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Validation exception\"\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "404",
        "message" : "Pet not found",
        "hasMore" : true,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Pet not found\"\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "400",
        "message" : "Invalid ID supplied",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid ID supplied\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Pet" ],
      "nickname" : "updatePet"
    }, {
      "responseHeaders" : [ ],
      "hasConsumes" : true,
      "hasProduces" : true,
      "hasParams" : true,
      "hasMore" : true,
      "path" : "/pet",
      "operationId" : "addPet",
      "httpMethod" : "POST",
      "summary" : "Add a new pet to the store",
      "notes" : "",
      "baseName" : "Pet",
      "consumes" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "bodyParam" : {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Pet",
        "description" : "Pet object that needs to be added to the store",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Pet object that needs to be added to the store\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Pet\"\n  }\n}"
      },
      "allParams" : [ {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Pet",
        "description" : "Pet object that needs to be added to the store",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Pet object that needs to be added to the store\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Pet\"\n  }\n}"
      } ],
      "bodyParams" : [ {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Pet",
        "description" : "Pet object that needs to be added to the store",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Pet object that needs to be added to the store\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Pet\"\n  }\n}"
      } ],
      "pathParams" : [ ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "authMethods" : [ {
        "name" : "petstore_auth",
        "type" : "oauth2",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : true,
        "isApiKey" : false,
        "isKeyInQuery" : false,
        "isKeyInHeader" : false
      } ],
      "tags" : [ "Pet" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "405",
        "message" : "Invalid input",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid input\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Pet" ],
      "nickname" : "addPet"
    }, {
      "responseHeaders" : [ ],
      "hasProduces" : true,
      "hasParams" : true,
      "isListContainer" : true,
      "hasMore" : true,
      "path" : "/pet/findByStatus",
      "operationId" : "findPetsByStatus",
      "returnType" : "array[Pet]",
      "httpMethod" : "GET",
      "returnBaseType" : "Pet",
      "returnContainer" : "array",
      "summary" : "Finds Pets by status",
      "notes" : "Multiple status values can be provided with comma seperated strings",
      "baseName" : "Pet",
      "defaultResponse" : "null",
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ {
        "isQueryParam" : true,
        "isContainer" : true,
        "baseName" : "status",
        "paramName" : "status",
        "dataType" : "array[string]",
        "collectionFormat" : "multi",
        "description" : "Status values that need to be considered for filter",
        "baseType" : "string",
        "defaultValue" : "available",
        "jsonSchema" : "{\n  \"name\" : \"status\",\n  \"in\" : \"query\",\n  \"description\" : \"Status values that need to be considered for filter\",\n  \"required\" : false,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  },\n  \"collectionFormat\" : \"multi\",\n  \"default\" : \"available\"\n}"
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ ],
      "queryParams" : [ {
        "isQueryParam" : true,
        "isContainer" : true,
        "baseName" : "status",
        "paramName" : "status",
        "dataType" : "array[string]",
        "collectionFormat" : "multi",
        "description" : "Status values that need to be considered for filter",
        "baseType" : "string",
        "defaultValue" : "available",
        "jsonSchema" : "{\n  \"name\" : \"status\",\n  \"in\" : \"query\",\n  \"description\" : \"Status values that need to be considered for filter\",\n  \"required\" : false,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  },\n  \"collectionFormat\" : \"multi\",\n  \"default\" : \"available\"\n}"
      } ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "authMethods" : [ {
        "name" : "petstore_auth",
        "type" : "oauth2",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : true,
        "isApiKey" : false,
        "isKeyInQuery" : false,
        "isKeyInHeader" : false
      } ],
      "tags" : [ "Pet" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "200",
        "message" : "successful operation",
        "hasMore" : true,
        "dataType" : "array[Pet]",
        "baseType" : "Pet",
        "containerType" : "array",
        "isDefault" : true,
        "simpleType" : false,
        "primitiveType" : false,
        "isMapContainer" : false,
        "isListContainer" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Pet"
          }
        },
        "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"type\" : \"array\",\n    \"items\" : {\n      \"$ref\" : \"#/definitions/Pet\"\n    }\n  }\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "400",
        "message" : "Invalid status value",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid status value\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Pet" ],
      "examples" : [ {
        "example" : "[ {\n  \"tags\" : [ {\n    \"id\" : 123456789,\n    \"name\" : \"aeiou\"\n  } ],\n  \"id\" : 123456789,\n  \"category\" : {\n    \"id\" : 123456789,\n    \"name\" : \"aeiou\"\n  },\n  \"status\" : \"aeiou\",\n  \"name\" : \"doggie\",\n  \"photoUrls\" : [ \"aeiou\" ]\n} ]",
        "contentType" : "application/json"
      }, {
        "example" : "<Pet>\n  <id>123456</id>\n  <name>doggie</name>\n  <photoUrls>string</photoUrls>\n  <status>string</status>\n</Pet>",
        "contentType" : "application/xml"
      } ],
      "nickname" : "findPetsByStatus"
    }, {
      "responseHeaders" : [ ],
      "hasProduces" : true,
      "hasParams" : true,
      "isListContainer" : true,
      "hasMore" : true,
      "path" : "/pet/findByTags",
      "operationId" : "findPetsByTags",
      "returnType" : "array[Pet]",
      "httpMethod" : "GET",
      "returnBaseType" : "Pet",
      "returnContainer" : "array",
      "summary" : "Finds Pets by tags",
      "notes" : "Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",
      "baseName" : "Pet",
      "defaultResponse" : "null",
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ {
        "isQueryParam" : true,
        "isContainer" : true,
        "baseName" : "tags",
        "paramName" : "tags",
        "dataType" : "array[string]",
        "collectionFormat" : "multi",
        "description" : "Tags to filter by",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"name\" : \"tags\",\n  \"in\" : \"query\",\n  \"description\" : \"Tags to filter by\",\n  \"required\" : false,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  },\n  \"collectionFormat\" : \"multi\"\n}"
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ ],
      "queryParams" : [ {
        "isQueryParam" : true,
        "isContainer" : true,
        "baseName" : "tags",
        "paramName" : "tags",
        "dataType" : "array[string]",
        "collectionFormat" : "multi",
        "description" : "Tags to filter by",
        "baseType" : "string",
        "jsonSchema" : "{\n  \"name\" : \"tags\",\n  \"in\" : \"query\",\n  \"description\" : \"Tags to filter by\",\n  \"required\" : false,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  },\n  \"collectionFormat\" : \"multi\"\n}"
      } ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "authMethods" : [ {
        "name" : "petstore_auth",
        "type" : "oauth2",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : true,
        "isApiKey" : false,
        "isKeyInQuery" : false,
        "isKeyInHeader" : false
      } ],
      "tags" : [ "Pet" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "200",
        "message" : "successful operation",
        "hasMore" : true,
        "dataType" : "array[Pet]",
        "baseType" : "Pet",
        "containerType" : "array",
        "isDefault" : true,
        "simpleType" : false,
        "primitiveType" : false,
        "isMapContainer" : false,
        "isListContainer" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Pet"
          }
        },
        "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"type\" : \"array\",\n    \"items\" : {\n      \"$ref\" : \"#/definitions/Pet\"\n    }\n  }\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "400",
        "message" : "Invalid tag value",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid tag value\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Pet" ],
      "examples" : [ {
        "example" : "[ {\n  \"tags\" : [ {\n    \"id\" : 123456789,\n    \"name\" : \"aeiou\"\n  } ],\n  \"id\" : 123456789,\n  \"category\" : {\n    \"id\" : 123456789,\n    \"name\" : \"aeiou\"\n  },\n  \"status\" : \"aeiou\",\n  \"name\" : \"doggie\",\n  \"photoUrls\" : [ \"aeiou\" ]\n} ]",
        "contentType" : "application/json"
      }, {
        "example" : "<Pet>\n  <id>123456</id>\n  <name>doggie</name>\n  <photoUrls>string</photoUrls>\n  <status>string</status>\n</Pet>",
        "contentType" : "application/xml"
      } ],
      "nickname" : "findPetsByTags"
    }, {
      "responseHeaders" : [ ],
      "hasProduces" : true,
      "hasParams" : true,
      "returnSimpleType" : true,
      "hasMore" : true,
      "path" : "/pet/{petId}",
      "operationId" : "getPetById",
      "returnType" : "Pet",
      "httpMethod" : "GET",
      "returnBaseType" : "Pet",
      "summary" : "Find pet by ID",
      "notes" : "Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions",
      "baseName" : "Pet",
      "defaultResponse" : "null",
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ {
        "isPathParam" : true,
        "baseName" : "petId",
        "paramName" : "pet_id",
        "dataType" : "int",
        "description" : "ID of pet that needs to be fetched",
        "jsonSchema" : "{\n  \"name\" : \"petId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of pet that needs to be fetched\",\n  \"required\" : true,\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
        "required" : true
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ {
        "isPathParam" : true,
        "baseName" : "petId",
        "paramName" : "pet_id",
        "dataType" : "int",
        "description" : "ID of pet that needs to be fetched",
        "jsonSchema" : "{\n  \"name\" : \"petId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of pet that needs to be fetched\",\n  \"required\" : true,\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
        "required" : true
      } ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "authMethods" : [ {
        "name" : "api_key",
        "type" : "apiKey",
        "hasMore" : true,
        "isBasic" : false,
        "isOAuth" : false,
        "isApiKey" : true,
        "keyParamName" : "api_key",
        "isKeyInQuery" : false,
        "isKeyInHeader" : true
      }, {
        "name" : "petstore_auth",
        "type" : "oauth2",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : true,
        "isApiKey" : false,
        "isKeyInQuery" : false,
        "isKeyInHeader" : false
      } ],
      "tags" : [ "Pet" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "404",
        "message" : "Pet not found",
        "hasMore" : true,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Pet not found\"\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "200",
        "message" : "successful operation",
        "hasMore" : true,
        "dataType" : "Pet",
        "baseType" : "Pet",
        "isDefault" : true,
        "simpleType" : true,
        "primitiveType" : false,
        "schema" : {
          "$ref" : "#/definitions/Pet"
        },
        "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Pet\"\n  }\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "400",
        "message" : "Invalid ID supplied",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid ID supplied\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Pet" ],
      "examples" : [ {
        "example" : "{\n  \"tags\" : [ {\n    \"id\" : 123456789,\n    \"name\" : \"aeiou\"\n  } ],\n  \"id\" : 123456789,\n  \"category\" : {\n    \"id\" : 123456789,\n    \"name\" : \"aeiou\"\n  },\n  \"status\" : \"aeiou\",\n  \"name\" : \"doggie\",\n  \"photoUrls\" : [ \"aeiou\" ]\n}",
        "contentType" : "application/json"
      }, {
        "example" : "<Pet>\n  <id>123456</id>\n  <name>doggie</name>\n  <photoUrls>string</photoUrls>\n  <status>string</status>\n</Pet>",
        "contentType" : "application/xml"
      } ],
      "nickname" : "getPetById"
    }, {
      "responseHeaders" : [ ],
      "hasConsumes" : true,
      "hasProduces" : true,
      "hasParams" : true,
      "hasMore" : true,
      "path" : "/pet/{petId}",
      "operationId" : "updatePetWithForm",
      "httpMethod" : "POST",
      "summary" : "Updates a pet in the store with form data",
      "notes" : "",
      "baseName" : "Pet",
      "consumes" : [ {
        "hasMore" : null,
        "mediaType" : "application/x-www-form-urlencoded"
      } ],
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ {
        "isPathParam" : true,
        "hasMore" : true,
        "baseName" : "petId",
        "paramName" : "pet_id",
        "dataType" : "string",
        "description" : "ID of pet that needs to be updated",
        "jsonSchema" : "{\n  \"name\" : \"petId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of pet that needs to be updated\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "required" : true
      }, {
        "isFormParam" : true,
        "notFile" : true,
        "hasMore" : true,
        "secondaryParam" : true,
        "baseName" : "name",
        "paramName" : "name",
        "dataType" : "string",
        "description" : "Updated name of the pet",
        "jsonSchema" : "{\n  \"name\" : \"name\",\n  \"in\" : \"formData\",\n  \"description\" : \"Updated name of the pet\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}"
      }, {
        "isFormParam" : true,
        "notFile" : true,
        "secondaryParam" : true,
        "baseName" : "status",
        "paramName" : "status",
        "dataType" : "string",
        "description" : "Updated status of the pet",
        "jsonSchema" : "{\n  \"name\" : \"status\",\n  \"in\" : \"formData\",\n  \"description\" : \"Updated status of the pet\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}"
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ {
        "isPathParam" : true,
        "baseName" : "petId",
        "paramName" : "pet_id",
        "dataType" : "string",
        "description" : "ID of pet that needs to be updated",
        "jsonSchema" : "{\n  \"name\" : \"petId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of pet that needs to be updated\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "required" : true
      } ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ {
        "isFormParam" : true,
        "notFile" : true,
        "hasMore" : true,
        "baseName" : "name",
        "paramName" : "name",
        "dataType" : "string",
        "description" : "Updated name of the pet",
        "jsonSchema" : "{\n  \"name\" : \"name\",\n  \"in\" : \"formData\",\n  \"description\" : \"Updated name of the pet\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}"
      }, {
        "isFormParam" : true,
        "notFile" : true,
        "secondaryParam" : true,
        "baseName" : "status",
        "paramName" : "status",
        "dataType" : "string",
        "description" : "Updated status of the pet",
        "jsonSchema" : "{\n  \"name\" : \"status\",\n  \"in\" : \"formData\",\n  \"description\" : \"Updated status of the pet\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}"
      } ],
      "authMethods" : [ {
        "name" : "petstore_auth",
        "type" : "oauth2",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : true,
        "isApiKey" : false,
        "isKeyInQuery" : false,
        "isKeyInHeader" : false
      } ],
      "tags" : [ "Pet" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "405",
        "message" : "Invalid input",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid input\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ ],
      "nickname" : "updatePetWithForm"
    }, {
      "responseHeaders" : [ ],
      "hasProduces" : true,
      "hasParams" : true,
      "hasMore" : true,
      "path" : "/pet/{petId}",
      "operationId" : "deletePet",
      "httpMethod" : "DELETE",
      "summary" : "Deletes a pet",
      "notes" : "",
      "baseName" : "Pet",
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ {
        "isHeaderParam" : true,
        "hasMore" : true,
        "baseName" : "api_key",
        "paramName" : "api_key",
        "dataType" : "string",
        "description" : "",
        "jsonSchema" : "{\n  \"name\" : \"api_key\",\n  \"in\" : \"header\",\n  \"description\" : \"\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}"
      }, {
        "isPathParam" : true,
        "secondaryParam" : true,
        "baseName" : "petId",
        "paramName" : "pet_id",
        "dataType" : "int",
        "description" : "Pet id to delete",
        "jsonSchema" : "{\n  \"name\" : \"petId\",\n  \"in\" : \"path\",\n  \"description\" : \"Pet id to delete\",\n  \"required\" : true,\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
        "required" : true
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ {
        "isPathParam" : true,
        "baseName" : "petId",
        "paramName" : "pet_id",
        "dataType" : "int",
        "description" : "Pet id to delete",
        "jsonSchema" : "{\n  \"name\" : \"petId\",\n  \"in\" : \"path\",\n  \"description\" : \"Pet id to delete\",\n  \"required\" : true,\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
        "required" : true
      } ],
      "queryParams" : [ ],
      "headerParams" : [ {
        "isHeaderParam" : true,
        "baseName" : "api_key",
        "paramName" : "api_key",
        "dataType" : "string",
        "description" : "",
        "jsonSchema" : "{\n  \"name\" : \"api_key\",\n  \"in\" : \"header\",\n  \"description\" : \"\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}"
      } ],
      "formParams" : [ ],
      "authMethods" : [ {
        "name" : "petstore_auth",
        "type" : "oauth2",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : true,
        "isApiKey" : false,
        "isKeyInQuery" : false,
        "isKeyInHeader" : false
      } ],
      "tags" : [ "Pet" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "400",
        "message" : "Invalid pet value",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid pet value\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ ],
      "nickname" : "deletePet"
    }, {
      "responseHeaders" : [ ],
      "hasConsumes" : true,
      "hasProduces" : true,
      "hasParams" : true,
      "path" : "/pet/{petId}/uploadImage",
      "operationId" : "uploadFile",
      "httpMethod" : "POST",
      "summary" : "uploads an image",
      "notes" : "",
      "baseName" : "Pet",
      "consumes" : [ {
        "hasMore" : null,
        "mediaType" : "multipart/form-data"
      } ],
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ {
        "isPathParam" : true,
        "hasMore" : true,
        "baseName" : "petId",
        "paramName" : "pet_id",
        "dataType" : "int",
        "description" : "ID of pet to update",
        "jsonSchema" : "{\n  \"name\" : \"petId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of pet to update\",\n  \"required\" : true,\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
        "required" : true
      }, {
        "isFormParam" : true,
        "notFile" : true,
        "hasMore" : true,
        "secondaryParam" : true,
        "baseName" : "additionalMetadata",
        "paramName" : "additional_metadata",
        "dataType" : "string",
        "description" : "Additional data to pass to server",
        "jsonSchema" : "{\n  \"name\" : \"additionalMetadata\",\n  \"in\" : \"formData\",\n  \"description\" : \"Additional data to pass to server\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}"
      }, {
        "isFormParam" : true,
        "isFile" : true,
        "secondaryParam" : true,
        "baseName" : "file",
        "paramName" : "file",
        "dataType" : "string",
        "description" : "file to upload",
        "jsonSchema" : "{\n  \"name\" : \"file\",\n  \"in\" : \"formData\",\n  \"description\" : \"file to upload\",\n  \"required\" : false,\n  \"type\" : \"file\"\n}"
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ {
        "isPathParam" : true,
        "baseName" : "petId",
        "paramName" : "pet_id",
        "dataType" : "int",
        "description" : "ID of pet to update",
        "jsonSchema" : "{\n  \"name\" : \"petId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of pet to update\",\n  \"required\" : true,\n  \"type\" : \"integer\",\n  \"format\" : \"int64\"\n}",
        "required" : true
      } ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ {
        "isFormParam" : true,
        "notFile" : true,
        "hasMore" : true,
        "baseName" : "additionalMetadata",
        "paramName" : "additional_metadata",
        "dataType" : "string",
        "description" : "Additional data to pass to server",
        "jsonSchema" : "{\n  \"name\" : \"additionalMetadata\",\n  \"in\" : \"formData\",\n  \"description\" : \"Additional data to pass to server\",\n  \"required\" : false,\n  \"type\" : \"string\"\n}"
      }, {
        "isFormParam" : true,
        "isFile" : true,
        "secondaryParam" : true,
        "baseName" : "file",
        "paramName" : "file",
        "dataType" : "string",
        "description" : "file to upload",
        "jsonSchema" : "{\n  \"name\" : \"file\",\n  \"in\" : \"formData\",\n  \"description\" : \"file to upload\",\n  \"required\" : false,\n  \"type\" : \"file\"\n}"
      } ],
      "authMethods" : [ {
        "name" : "petstore_auth",
        "type" : "oauth2",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : true,
        "isApiKey" : false,
        "isKeyInQuery" : false,
        "isKeyInHeader" : false
      } ],
      "tags" : [ "Pet" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "0",
        "message" : "successful operation",
        "hasMore" : false,
        "isDefault" : true,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"successful operation\"\n}",
        "wildcard" : true
      } ],
      "imports" : [ ],
      "nickname" : "uploadFile"
    } ],
    "classname" : "PetController"
  },
  "infoUrl" : null,
  "licenseUrl" : "http://www.apache.org/licenses/LICENSE-2.0.html",
  "appDescription" : "This is a sample server Petstore server.  You can find out more about Swagger at <a href=\\\"http://swagger.io\\\">http://swagger.io</a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key \\\"special-key\\\" to test the authorization filters"
}