{
  "importPath" : "PetStore\\V1000\\Controllers.Store",
  "licenseUrl" : "http://www.apache.org/licenses/LICENSE-2.0.html",
  "appVersion" : "1.0.0",
  "package" : "PetStore\\V1000\\Controllers",
  "imports" : [ {
    "import" : "PetStore\\V1000\\Models\\map"
  }, {
    "import" : "PetStore\\V1000\\Models\\Order"
  } ],
  "modelPackage" : "PetStore\\V1000\\Models",
  "artifactVersion" : "1.0.0",
  "appName" : "Swagger Petstore",
  "groupId" : "io.swagger",
  "contextPath" : "/v2",
  "appDescription" : "This is a sample server Petstore server.  You can find out more about Swagger at <a href=\\\"http://swagger.io\\\">http://swagger.io</a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key \\\"special-key\\\" to test the authorization filters",
  "invokerPackage" : "PetStore\\V1000",
  "licenseInfo" : "Apache 2.0",
  "classVarName" : "store",
  "version" : "1.0.0",
  "operations" : {
    "classname" : "StoreApi",
    "operation" : [ {
      "responseHeaders" : [ ],
      "hasProduces" : true,
      "isMapContainer" : true,
      "hasMore" : true,
      "path" : "/store/inventory",
      "operationId" : "getInventory",
      "returnType" : "map[string,int]",
      "httpMethod" : "GET",
      "returnBaseType" : "map",
      "returnContainer" : "map",
      "summary" : "Returns pet inventories by status",
      "notes" : "Returns a map of status codes to quantities",
      "baseName" : "Store",
      "defaultResponse" : "null",
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ ],
      "bodyParams" : [ ],
      "pathParams" : [ ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "authMethods" : [ {
        "name" : "api_key",
        "type" : "apiKey",
        "hasMore" : false,
        "isBasic" : false,
        "isOAuth" : false,
        "isApiKey" : true,
        "keyParamName" : "api_key",
        "isKeyInQuery" : false,
        "isKeyInHeader" : true
      } ],
      "tags" : [ "Store" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "200",
        "message" : "successful operation",
        "hasMore" : false,
        "dataType" : "map[string,int]",
        "baseType" : "map",
        "containerType" : "map",
        "isDefault" : true,
        "simpleType" : false,
        "primitiveType" : false,
        "isMapContainer" : true,
        "isListContainer" : false,
        "schema" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"type\" : \"object\",\n    \"additionalProperties\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    }\n  }\n}",
        "wildcard" : false
      } ],
      "imports" : [ "map" ],
      "examples" : [ {
        "contentType" : "application/json",
        "example" : "{\n  \"key\" : 123\n}"
      }, {
        "contentType" : "application/xml",
        "example" : "not implemented io.swagger.models.properties.MapProperty@3e"
      } ],
      "nickname" : "getInventory"
    }, {
      "responseHeaders" : [ ],
      "hasProduces" : true,
      "hasParams" : true,
      "returnSimpleType" : true,
      "hasMore" : true,
      "path" : "/store/order",
      "operationId" : "placeOrder",
      "returnType" : "Order",
      "httpMethod" : "POST",
      "returnBaseType" : "Order",
      "summary" : "Place an order for a pet",
      "notes" : "",
      "baseName" : "Store",
      "defaultResponse" : "null",
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "bodyParam" : {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Order",
        "description" : "order placed for purchasing the pet",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"order placed for purchasing the pet\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Order\"\n  }\n}"
      },
      "allParams" : [ {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Order",
        "description" : "order placed for purchasing the pet",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"order placed for purchasing the pet\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Order\"\n  }\n}"
      } ],
      "bodyParams" : [ {
        "isBodyParam" : true,
        "baseName" : "body",
        "paramName" : "body",
        "dataType" : "Order",
        "description" : "order placed for purchasing the pet",
        "jsonSchema" : "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"order placed for purchasing the pet\",\n  \"required\" : false,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Order\"\n  }\n}"
      } ],
      "pathParams" : [ ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "tags" : [ "Store" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "200",
        "message" : "successful operation",
        "hasMore" : true,
        "dataType" : "Order",
        "baseType" : "Order",
        "isDefault" : true,
        "simpleType" : true,
        "primitiveType" : false,
        "schema" : {
          "$ref" : "#/definitions/Order"
        },
        "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Order\"\n  }\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "400",
        "message" : "Invalid Order",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid Order\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Order" ],
      "examples" : [ {
        "contentType" : "application/json",
        "example" : "{\n  \"petId\" : 123456789,\n  \"quantity\" : 123,\n  \"id\" : 123456789,\n  \"shipDate\" : \"2015-07-02T23:11:04.144+0000\",\n  \"complete\" : true,\n  \"status\" : \"aeiou\"\n}"
      }, {
        "contentType" : "application/xml",
        "example" : "<Order>\n  <id>123456</id>\n  <petId>123456</petId>\n  <quantity>0</quantity>\n  <shipDate>2015-07-03T07:11:04.151Z</shipDate>\n  <status>string</status>\n  <complete>true</complete>\n</Order>"
      } ],
      "nickname" : "placeOrder"
    }, {
      "responseHeaders" : [ ],
      "hasProduces" : true,
      "hasParams" : true,
      "returnSimpleType" : true,
      "hasMore" : true,
      "path" : "/store/order/{orderId}",
      "operationId" : "getOrderById",
      "returnType" : "Order",
      "httpMethod" : "GET",
      "returnBaseType" : "Order",
      "summary" : "Find purchase order by ID",
      "notes" : "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
      "baseName" : "Store",
      "defaultResponse" : "null",
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ {
        "isPathParam" : true,
        "baseName" : "orderId",
        "paramName" : "order_id",
        "dataType" : "string",
        "description" : "ID of pet that needs to be fetched",
        "jsonSchema" : "{\n  \"name\" : \"orderId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of pet that needs to be fetched\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "required" : true
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ {
        "isPathParam" : true,
        "baseName" : "orderId",
        "paramName" : "order_id",
        "dataType" : "string",
        "description" : "ID of pet that needs to be fetched",
        "jsonSchema" : "{\n  \"name\" : \"orderId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of pet that needs to be fetched\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "required" : true
      } ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "tags" : [ "Store" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "404",
        "message" : "Order not found",
        "hasMore" : true,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Order not found\"\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "200",
        "message" : "successful operation",
        "hasMore" : true,
        "dataType" : "Order",
        "baseType" : "Order",
        "isDefault" : true,
        "simpleType" : true,
        "primitiveType" : false,
        "schema" : {
          "$ref" : "#/definitions/Order"
        },
        "jsonSchema" : "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Order\"\n  }\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "400",
        "message" : "Invalid ID supplied",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid ID supplied\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ "Order" ],
      "examples" : [ {
        "contentType" : "application/json",
        "example" : "{\n  \"petId\" : 123456789,\n  \"quantity\" : 123,\n  \"id\" : 123456789,\n  \"shipDate\" : \"2015-07-02T23:11:04.153+0000\",\n  \"complete\" : true,\n  \"status\" : \"aeiou\"\n}"
      }, {
        "contentType" : "application/xml",
        "example" : "<Order>\n  <id>123456</id>\n  <petId>123456</petId>\n  <quantity>0</quantity>\n  <shipDate>2015-07-03T07:11:04.153Z</shipDate>\n  <status>string</status>\n  <complete>true</complete>\n</Order>"
      } ],
      "nickname" : "getOrderById"
    }, {
      "responseHeaders" : [ ],
      "hasProduces" : true,
      "hasParams" : true,
      "path" : "/store/order/{orderId}",
      "operationId" : "deleteOrder",
      "httpMethod" : "DELETE",
      "summary" : "Delete purchase order by ID",
      "notes" : "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
      "baseName" : "Store",
      "produces" : [ {
        "hasMore" : "true",
        "mediaType" : "application/json"
      }, {
        "hasMore" : null,
        "mediaType" : "application/xml"
      } ],
      "allParams" : [ {
        "isPathParam" : true,
        "baseName" : "orderId",
        "paramName" : "order_id",
        "dataType" : "string",
        "description" : "ID of the order that needs to be deleted",
        "jsonSchema" : "{\n  \"name\" : \"orderId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of the order that needs to be deleted\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "required" : true
      } ],
      "bodyParams" : [ ],
      "pathParams" : [ {
        "isPathParam" : true,
        "baseName" : "orderId",
        "paramName" : "order_id",
        "dataType" : "string",
        "description" : "ID of the order that needs to be deleted",
        "jsonSchema" : "{\n  \"name\" : \"orderId\",\n  \"in\" : \"path\",\n  \"description\" : \"ID of the order that needs to be deleted\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
        "required" : true
      } ],
      "queryParams" : [ ],
      "headerParams" : [ ],
      "formParams" : [ ],
      "tags" : [ "Store" ],
      "responses" : [ {
        "headers" : [ ],
        "code" : "404",
        "message" : "Order not found",
        "hasMore" : true,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Order not found\"\n}",
        "wildcard" : false
      }, {
        "headers" : [ ],
        "code" : "400",
        "message" : "Invalid ID supplied",
        "hasMore" : false,
        "isDefault" : false,
        "simpleType" : true,
        "primitiveType" : true,
        "isMapContainer" : false,
        "isListContainer" : false,
        "jsonSchema" : "{\n  \"description\" : \"Invalid ID supplied\"\n}",
        "wildcard" : false
      } ],
      "imports" : [ ],
      "nickname" : "deleteOrder"
    } ]
  },
  "basePath" : "http://petstore.swagger.io/v2",
  "classname" : "StoreApi",
  "infoUrl" : null,
  "namespace" : "PetStore",
  "infoEmail" : "apiteam@swagger.io",
  "artifactId" : "swagger-client",
  "baseName" : "Store"
}