<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
namespace {{invokerPackage}}\Controllers;

{{#imports}}
use {{import}};
{{/imports}}
{{#validatorImports}}
use {{import}};
{{/validatorImports}}
        
{{#operations}}
/**
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 * @RoutePrefix("{{{contextPath}}}")
 */
class {{classname}} extends BaseController {
{{#operation}}
    /**
     * {{{summary}}}
     *
     * @{{httpMethod}}("{{{path}}}")
     */
    public function {{nickname}}({{#pathParams}}${{paramName}}{{#optional}}=null{{/optional}}{{#hasMore}}, {{/hasMore}}{{/pathParams}}) {
{{#allParams}}{{#isQueryParam}}        ${{paramName}} = $this->request->get("{{baseName}}");
{{/isQueryParam}}{{#isHeaderParam}}        ${{paramName}} = $this->request->getHeader("{{baseName}}");
{{/isHeaderParam}}{{#isFormParam}}{{#isFile}}        ${{paramName}} = $this->getFile("{{baseName}}");
{{/isFile}}{{^isFile}}        ${{paramName}} = $this->request->getPost("{{baseName}}");
{{/isFile}}{{/isFormParam}}{{#isCookieParam}}        ${{paramName}} = $this->cookies->get("{{baseName}}");
{{/isCookieParam}}{{#isBodyParam}}{{#isContainer}}        ${{paramName}} = $this->objectConverter->convertArray($this->request->getBody(), {{baseType}}::CLASS, 'json');
{{/isContainer}}{{^isContainer}}        ${{paramName}} = $this->objectConverter->convert($this->request->getBody(), {{dataType}}::CLASS, 'json');
{{/isContainer}}{{/isBodyParam}}{{/allParams}}{{#validators}}        $this->validator->validate({{{validator}}});
{{/validators}}        $this->{{classVarName}}Service->{{nickname}}({{#allParams}}${{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
    }{{#hasMore}}

{{/hasMore}}
{{/operation}}
{{/operations}}

}
